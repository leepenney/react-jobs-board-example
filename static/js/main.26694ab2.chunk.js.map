{"version":3,"sources":["example-rss.xml","NavBar.js","JobsList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBar","showAlert","e","preventDefault","alert","react_default","a","createElement","href","onClick","className","index_es","icon","faBell","faEnvelope","faUser","JobsList","_useState","useState","_useState2","Object","slicedToArray","jobs","setJobs","getCategoryValue","categories","value","initialSplit","split","categorySplit","taxonomy","salary","contract_type","location","i","prop","toggleDescription","toggleState","targetElement","target","closest","classList","remove","add","useEffect","fetch","rssExample","then","response","text","xml","rssParser","rss","items","map","item","index","objectSpread2","ref","catch","error","console","concat","_ref","title","links","description","authors","pubDate","key","data-job-id","name","trim","getTitleMinusRef","faFileLines","faLocationDot","faHashtag","getJobRef","url","faAnglesUp","App","src_NavBar","src_JobsList_0","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.26694ab2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/example-rss.ca59d58b.xml\";","import './NavBar.css';\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser, faEnvelope, faBell } from '@fortawesome/free-regular-svg-icons';\n\nfunction NavBar() {\n    \n    function showAlert(e) {\n        e.preventDefault(); \n        alert(`This is a test site, so these don't work`);\n    }\n\n  return (\n    <nav>\n        <ul>\n            <li><a href=\"/\" onClick={(e) => showAlert(e)}>Example Jobs Board</a></li>\n            <li className='selected'><a href=\"/browse\" onClick={(e) => showAlert(e)}>Browse Jobs</a></li>\n            <li><a href=\"/tips\" onClick={(e) => showAlert(e)}>Tips</a></li>\n            <li><a href=\"/notifications\" onClick={(e) => showAlert(e)}><FontAwesomeIcon icon={faBell} /></a></li>\n            <li><a href=\"/messages\" onClick={(e) => showAlert(e)}><FontAwesomeIcon icon={faEnvelope} /></a></li>\n            <li><a href=\"/dashboard\" onClick={(e) => showAlert(e)}><FontAwesomeIcon icon={faUser} /></a></li>\n        </ul>\n    </nav>\n  );\n}\n\nexport default NavBar;","import React from 'react';\nimport './JobsList.css';\nimport * as rssParser from 'react-native-rss-parser';\nimport { useEffect, useState } from 'react';\nimport rssExample from './example-rss.xml';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLocationDot, faFileLines, faHashtag, faAnglesUp } from '@fortawesome/free-solid-svg-icons';\n\nconst JobsList = () => {\n\n    const [jobs, setJobs] = useState( [] );\n\n    function parseRss() {\n        fetch(rssExample)\n            .then(response => response.text())\n            .then(xml => rssParser.parse(xml))\n            .then (rss => rss.items.map((item, index) => ({ref: index, ...item})))\n            .then(items => setJobs(items) )\n            .catch(error => console.error(`Error in fetch: ${error}`));\n    }\n\n    function getCategoryValue(categories, value) {\n        const initialSplit = categories.split('/')\n        let categorySplit = {\n            taxonomy: '',\n            salary: '',\n            contract_type: '',\n            location: '',\n        };\n        let i = 0;\n        for (let prop in categorySplit) {\n            categorySplit[prop] = initialSplit[i];\n            i++;\n        }\n        return categorySplit[value];\n    }\n\n    function getTitleMinusRef(title) {\n        return title.split('Ref.')[0].trim();\n    }\n\n    function getJobRef(title) {\n        return title.split('Ref.')[1].trim();\n    }\n\n    function toggleDescription(e, toggleState) {\n        const targetElement = (toggleState === 'show') ? e.target.closest('li') : \n            e.target.closest('li.show');\n        targetElement.classList.remove(toggleState === 'show' ? 'hide' : 'show');\n        targetElement.classList.add(toggleState === 'show' ? 'show' : 'hide');\n    }\n\n    useEffect(() => { \n        parseRss();\n    }, []);\n\n    return (\n        <ul className=\"jobs-list\">\n            {jobs.map(( { ref, title, links, description, authors, categories, pubDate }) => (\n               <li key={ref} data-job-id={ref}>\n                    <div>\n                        <div className=\"job-company\">{authors[0].name}</div>\n                        <h3 className=\"job-title\">{getTitleMinusRef(title)}</h3>\n                        <div className='job-taxonomy'>{getCategoryValue(categories[0].name, 'taxonomy')}</div>\n                   </div>\n                   <div className='job-salary'>\n                        {getCategoryValue(categories[0].name, 'salary')}\n                   </div>\n                   <div>\n                        <div><FontAwesomeIcon icon={faFileLines} /> {getCategoryValue(categories[0].name, 'contract_type')}</div>\n                        <div><FontAwesomeIcon icon={faLocationDot} /> {getCategoryValue(categories[0].name, 'location')}</div>\n                        <div><FontAwesomeIcon icon={faHashtag} /> {getJobRef(title)}</div>\n                   </div>\n                   <div>\n                        <button className=\"button more-info\" onClick={(e) => toggleDescription(e, 'show')}>More Info</button>\n                   </div>\n                   <div className={`job-description`}>\n                       <p>{description}</p>\n                       <a className=\"button apply-now\" href={links[0].url} \n                            onClick={(e) => { e.preventDefault(); alert(`This is a test site, so these don't work`)}}>Apply Now</a>\n                       <button className='close-button' onClick={(e) => toggleDescription(e, 'hide')}>\n                           <FontAwesomeIcon icon={faAnglesUp} />\n                        </button>\n                    </div>\n                </li> \n            ))}\n        </ul>\n    )\n}\n\nexport default JobsList;","import './App.css';\nimport React from 'react';\nimport NavBar from './NavBar';\nimport JobsList from './JobsList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <JobsList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}